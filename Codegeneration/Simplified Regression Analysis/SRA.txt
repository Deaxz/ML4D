double a = -1.0;
double b;
b = 2.0;

fun double linearFunction(int x){
  return a * x + b;
};

int x0 = 0;
int x1 = 1;
int x2 = 2;
int x3 = 3;
int x4 = 4;

int y0 = 0;
int y1 = 1;
int y2 = 2;
int y3 = 3;
int y4 = 4;

double step_size = 0.1;

int i = 0;
while (i < 100) {

  int y_hat0 = (f(x0) - y0)**2;
  int y_hat1 = (f(x1) - y1)**2;
  int y_hat2 = (f(x2) - y2)**2;
  int y_hat3 = (f(x3) - y3)**2;
  int y_hat4 = (f(x4) - y4)**2;

  double loss = (y_hat0 + y_hat1 + y_hat2 + y_hat3 + y_hat4);
  loss<-;

  a = a - (a.grad * step_size);
  b = b - (b.grad * step_size);
  
  zero(a);
  zero(b);

  i = i + 1;
};