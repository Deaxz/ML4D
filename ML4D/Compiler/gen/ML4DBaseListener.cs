//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Dion/source/repos/p4/ML4D/Grammar\ML4D.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IML4DListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ML4DBaseListener : IML4DListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.lines"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLines([NotNull] ML4DParser.LinesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.lines"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLines([NotNull] ML4DParser.LinesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>varDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] ML4DParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] ML4DParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>tensorDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTensorDecl([NotNull] ML4DParser.TensorDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tensorDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTensorDecl([NotNull] ML4DParser.TensorDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncDecl([NotNull] ML4DParser.FuncDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncDecl([NotNull] ML4DParser.FuncDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.tensor_init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTensor_init([NotNull] ML4DParser.Tensor_initContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.tensor_init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTensor_init([NotNull] ML4DParser.Tensor_initContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] ML4DParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] ML4DParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStmt([NotNull] ML4DParser.ForStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStmt([NotNull] ML4DParser.ForStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>whileStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStmt([NotNull] ML4DParser.WhileStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStmt([NotNull] ML4DParser.WhileStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>returnStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] ML4DParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] ML4DParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncStmt([NotNull] ML4DParser.FuncStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncStmt([NotNull] ML4DParser.FuncStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>gradientsStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGradientsStmt([NotNull] ML4DParser.GradientsStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>gradientsStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGradientsStmt([NotNull] ML4DParser.GradientsStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStmt([NotNull] ML4DParser.AssignStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStmt([NotNull] ML4DParser.AssignStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.assign_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_expr([NotNull] ML4DParser.Assign_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.assign_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_expr([NotNull] ML4DParser.Assign_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>exprExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprExpr([NotNull] ML4DParser.ExprExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprExpr([NotNull] ML4DParser.ExprExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixRelationalExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixRelationalExpr([NotNull] ML4DParser.InfixRelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixRelationalExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixRelationalExpr([NotNull] ML4DParser.InfixRelationalExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixBoolExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixBoolExpr([NotNull] ML4DParser.InfixBoolExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixBoolExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixBoolExpr([NotNull] ML4DParser.InfixBoolExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] ML4DParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] ML4DParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncExpr([NotNull] ML4DParser.FuncExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncExpr([NotNull] ML4DParser.FuncExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>typeExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeExpr([NotNull] ML4DParser.TypeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeExpr([NotNull] ML4DParser.TypeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixValueExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixValueExpr([NotNull] ML4DParser.InfixValueExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixValueExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixValueExpr([NotNull] ML4DParser.InfixValueExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parensExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParensExpr([NotNull] ML4DParser.ParensExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parensExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParensExpr([NotNull] ML4DParser.ParensExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.types"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypes([NotNull] ML4DParser.TypesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.types"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypes([NotNull] ML4DParser.TypesContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
