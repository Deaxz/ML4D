//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Dion/source/repos/p4/ML4D/Grammar\ML4D.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ML4DParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IML4DListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.lines"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLines([NotNull] ML4DParser.LinesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.lines"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLines([NotNull] ML4DParser.LinesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] ML4DParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] ML4DParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>tensorDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTensorDecl([NotNull] ML4DParser.TensorDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tensorDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTensorDecl([NotNull] ML4DParser.TensorDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncDecl([NotNull] ML4DParser.FuncDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcDecl</c>
	/// labeled alternative in <see cref="ML4DParser.dcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncDecl([NotNull] ML4DParser.FuncDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.tensor_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTensor_init([NotNull] ML4DParser.Tensor_initContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.tensor_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTensor_init([NotNull] ML4DParser.Tensor_initContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] ML4DParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] ML4DParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>forStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] ML4DParser.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] ML4DParser.ForStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>whileStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] ML4DParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] ML4DParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>returnStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] ML4DParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] ML4DParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncStmt([NotNull] ML4DParser.FuncStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncStmt([NotNull] ML4DParser.FuncStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>gradientsStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGradientsStmt([NotNull] ML4DParser.GradientsStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>gradientsStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGradientsStmt([NotNull] ML4DParser.GradientsStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] ML4DParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStmt</c>
	/// labeled alternative in <see cref="ML4DParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] ML4DParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.assign_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_expr([NotNull] ML4DParser.Assign_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.assign_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_expr([NotNull] ML4DParser.Assign_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprExpr([NotNull] ML4DParser.ExprExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprExpr([NotNull] ML4DParser.ExprExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixRelationalExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixRelationalExpr([NotNull] ML4DParser.InfixRelationalExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixRelationalExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixRelationalExpr([NotNull] ML4DParser.InfixRelationalExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixBoolExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixBoolExpr([NotNull] ML4DParser.InfixBoolExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixBoolExpr</c>
	/// labeled alternative in <see cref="ML4DParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixBoolExpr([NotNull] ML4DParser.InfixBoolExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] ML4DParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] ML4DParser.UnaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncExpr([NotNull] ML4DParser.FuncExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncExpr([NotNull] ML4DParser.FuncExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeExpr([NotNull] ML4DParser.TypeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeExpr([NotNull] ML4DParser.TypeExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixValueExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixValueExpr([NotNull] ML4DParser.InfixValueExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixValueExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixValueExpr([NotNull] ML4DParser.InfixValueExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parensExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParensExpr([NotNull] ML4DParser.ParensExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parensExpr</c>
	/// labeled alternative in <see cref="ML4DParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParensExpr([NotNull] ML4DParser.ParensExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ML4DParser.types"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypes([NotNull] ML4DParser.TypesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ML4DParser.types"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypes([NotNull] ML4DParser.TypesContext context);
}
